{"version":3,"sources":["components/form/Form.js","components/themes/Themes.js","components/themes/theme/Theme.js","App.js","index.js"],"names":["Alert","props","elevation","variant","useStyles","makeStyles","theme","root","flexGrow","cont","paddingTop","textAlign","form","display","flexDirection","alignItems","margin","marginRight","borderRadius","btn","preview","height","width","objectFit","upldbtn","Form","funk","re","classes","useState","image","setImage","title","setTitle","platform","setPlatform","creater","setCreater","open","setOpen","err","setErr","message","setMessage","handleClick","handleClose","onSubmitHandler","a","length","fd","FormData","append","config","headers","axios","post","Grid","className","container-fluid","xs","lg","Typography","autoComplete","TextField","value","onChange","e","target","id","label","htmlFor","name","style","type","files","changeHandler","Button","color","component","src","URL","createObjectURL","alt","onClick","Snackbar","autoHideDuration","onClose","severity","gridList","padding","justifyContent","overflow","flexWrap","progress","Mod","openM","closeModal","element","setRender","modalImage","setModalImage","setTimeout","prev","themeId","setThemeId","useEffect","_id","get","data","file","creator","console","log","fetchTheme","patch","Modal","changeImageHandler","Themes","window","innerWidth","col","setCol","themes","setThemes","loading","setLoading","history","useHistory","handleResize","Math","round","push","openModal","setOpenModal","render","addEventListener","fetchThemes","setElement","deleteTheme","delete","GridList","cols","CircularProgress","map","el","idx","GridListTile","GridListTileBar","subtitle","actionIcon","IconButton","images","cent","backgroundColor","text","backgroundImage","Theme","setTheme","params","useParams","fetchSingle","container","spacing","item","sm","maxWidth","marginTop","paddingBottom","Main","change","SetChange","Navbar","AppBar","position","Toolbar","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.02f2190a.chunk.js","sourcesContent":["import {\n  Button,\n  Grid,\n  makeStyles,\n  Snackbar,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\n\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\n\nimport React, { useState } from \"react\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  cont: {\n    paddingTop: \"90px\",\n    textAlign: \"center\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: \"20px\",\n    marginRight: \"30px\",\n    borderRadius: \"15px\",\n  },\n  btn: {\n    margin: \"20px\",\n  },\n  preview: {\n    height: \"200px\",\n    width: \"200px\",\n    objectFit: \"contain\",\n    margin: \"5px\",\n  },\n  upldbtn: {\n    margin: \"10px\",\n  },\n}));\n\nconst Form = ({ funk, re }) => {\n  const classes = useStyles();\n\n  const [image, setImage] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [platform, setPlatform] = useState(\"\");\n  const [creater, setCreater] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [err, setErr] = useState(false);\n  const [message, setMessage] = useState(\"Success uploading Data\");\n\n  const changeHandler = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmitHandler = async () => {\n    if (\n      image === null ||\n      title.length === 0 ||\n      platform.length === 0 ||\n      creater.length === 0\n    ) {\n      setErr(true);\n      setMessage(\"Please fill all the fields\");\n      handleClick();\n    } else {\n      var fd = new FormData();\n      fd.append(\"image\", image);\n      fd.append(\"title\", title);\n      fd.append(\"creator\", creater);\n      fd.append(\"platform\", platform);\n      const config = {\n        headers: {\n          \"Content-type\": \"multipart/form-data\",\n        },\n      };\n      try {\n        const response = await axios.post(\"/posts\", fd, config);\n        // console.log(response)\n        setImage(null);\n        setTitle(\"\");\n        setPlatform(\"\");\n        setCreater(\"\");\n        setErr(false);\n        setMessage(\"Success uploading data\");\n        handleClick();\n        funk(!re);\n      } catch (error) {\n        setErr(true);\n        setMessage(\"Server Error\");\n        handleClick();\n      }\n    }\n  };\n\n  // convert image to base64 but takes a lot of time while fetching pr posting base64 images //\n\n  // function getBase64(file, cb) {\n  //   let reader = new FileReader();\n  //   reader.readAsDataURL(file);\n  //   reader.onload = () => {\n  //     cb(reader.result);\n  //   };\n  //   reader.onerror = (err) => {\n  //     console.log(\"ERR: \", err);\n  //   };\n  // }\n\n  return (\n    <Grid className={classes.cont} container-fluid=\"true\" xs={12} lg={3}>\n      <Typography variant=\"h5\">Submit Your Themes</Typography>\n      <form className={classes.form} autoComplete=\"off\">\n        <TextField\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          id=\"filled-basic\"\n          label=\"Title\"\n        ></TextField>\n        <TextField\n          value={platform}\n          onChange={(e) => setPlatform(e.target.value)}\n          id=\"filled-basic\"\n          label=\"Platform\"\n        ></TextField>\n        <TextField\n          value={creater}\n          onChange={(e) => setCreater(e.target.value)}\n          id=\"filled-basic\"\n          label=\"Creater\"\n        ></TextField>\n        <label htmlFor=\"btn-upload\">\n          <input\n            id=\"btn-upload\"\n            name=\"btn-upload\"\n            style={{ display: \"none\" }}\n            type=\"file\"\n            onChange={(e) => changeHandler(e)}\n          />\n          <Button\n            className={classes.upldbtn}\n            variant=\"outlined\"\n            color=\"secondary\"\n            component=\"span\"\n          >\n            Upload Image File\n          </Button>\n        </label>\n        {image ? (\n          <img\n            className={classes.preview}\n            src={URL.createObjectURL(image)}\n            alt=\"preview\"\n          ></img>\n        ) : null}\n        <Button\n          onClick={onSubmitHandler}\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Submit\n        </Button>\n      </form>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={err ? \"error\" : \"success\"}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </Grid>\n  );\n};\n\nexport default Form;\n","import {\n  Button,\n  CircularProgress,\n  Grid,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n  makeStyles,\n  Modal,\n  Snackbar,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Delete from \"@material-ui/icons/DeleteForeverOutlined\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles({\n  gridList: {\n    padding: \"5px\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"hidden\",\n  },\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n  },\n  progress: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  cont: {\n    paddingTop: \"90px\",\n    textAlign: \"center\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: \"20px\",\n    // marginRight: \"30px\",\n    borderRadius: \"15px\",\n  },\n  btn: {\n    margin: \"20px\",\n  },\n  preview: {\n    height: \"200px\",\n    width: \"200px\",\n    objectFit: \"contain\",\n    margin: \"5px\",\n  },\n  upldbtn: {\n    margin: \"10px\",\n  },\n});\n\nconst Themes = ({ re }) => {\n  const [col, setCol] = useState(window.innerWidth / 400);\n  const [themes, setThemes] = useState([]);\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleResize = () => {\n    setCol(Math.round(window.innerWidth / 400));\n  };\n\n  const handleClick = async (id) => {\n    history.push(\"/posts/\" + id);\n  };\n\n  const [openModal, setOpenModal] = useState(false);\n  const [render, setRender] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    const fetchThemes = async () => {\n      setLoading(true);\n      try {\n        const { data } = await axios.get(\"/posts\");\n        setThemes(data);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n      }\n    };\n    fetchThemes();\n  }, [re, render]);\n\n  const [element, setElement] = useState({\n    _id: \"\",\n    file: null,\n    title: \"\",\n    creator: \"\",\n    platform: \"\",\n  });\n  const showModal = (p) => {\n    setElement(p);\n    setOpenModal(true);\n  };\n\n  const closeModal = () => {\n    setOpenModal(false);\n  };\n\n  const deleteTheme = async (id) => {\n    try {\n      const { data } = await axios.delete(`posts/${id}`);\n      setRender(!render);\n    } catch (err) {\n      setRender(!render);\n    }\n  };\n\n  return (\n    <Grid xs={12} lg={9} className={\"theme-div\"}>\n      <GridList className={classes.gridList} cols={col}>\n        {loading ? (\n          <div className={classes.progress}>\n            <CircularProgress color=\"secondary\" />\n          </div>\n        ) : (\n          themes.map((el, idx) => (\n            <GridListTile key={idx} className=\"hover\">\n              <img src={\"/uploads/\" + el.file} alt=\"img\"></img>\n              <GridListTileBar\n                title={\n                  <span\n                    onClick={() => handleClick(el._id)}\n                    className=\"themes-title\"\n                  >\n                    {el.title}\n                  </span>\n                }\n                subtitle={<span>by: {el.creator}</span>}\n                actionIcon={\n                  <div>\n                    <IconButton onClick={() => showModal(el)}>\n                      <Edit color=\"primary\" />\n                    </IconButton>\n                    <IconButton onClick={() => deleteTheme(el._id)}>\n                      <Delete color=\"error\" />\n                    </IconButton>\n                  </div>\n                }\n              />\n            </GridListTile>\n          ))\n        )}\n        <Mod\n          element={element}\n          openM={openModal}\n          setRender={setRender}\n          closeModal={closeModal}\n        />\n      </GridList>\n    </Grid>\n  );\n};\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Mod = ({ openM, closeModal, element, setRender }) => {\n  const [modalImage, setModalImage] = useState(null);\n  const [title, setTitle] = useState();\n  const [platform, setPlatform] = useState();\n  const [creater, setCreater] = useState();\n  const [open, setOpen] = useState(false);\n  const [err, setErr] = useState(false);\n  const [message, setMessage] = useState(\"Success uploading Data\");\n\n  const classes = useStyles();\n\n  const changeImageHandler = (e) => {\n    setModalImage(e.target.files[0]);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n    setTimeout(() => {\n      closeModal();\n      setRender((prev) => !prev);\n      setOpen(false);\n    }, [1000]);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [themeId, setThemeId] = useState(null);\n\n  useEffect(() => {\n    const fetchTheme = async () => {\n      if (!element._id) return;\n      try {\n        const { data } = await axios.get(`/posts/${element._id}`);\n        if (data && data.file) {\n          setModalImage(null);\n          setOpen(false);\n          setThemeId(data._id);\n          setTitle(data.title);\n          setCreater(data.creator);\n          setPlatform(data.platform);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchTheme();\n  }, [openM]);\n\n  const onSubmitHandler = async () => {\n    if (title.length === 0 || platform.length === 0 || creater.length === 0) {\n      setErr(true);\n      setMessage(\"Please fill all the fields\");\n      handleClick();\n    } else {\n      var fd = new FormData();\n      if (modalImage) {\n        fd.append(\"image\", modalImage);\n      } else {\n        fd.append(\"file\", element.file);\n      }\n      fd.append(\"title\", title);\n      fd.append(\"creator\", creater);\n      fd.append(\"platform\", platform);\n      const config = {\n        headers: {\n          \"Content-type\": \"multipart/form-data\",\n        },\n      };\n      try {\n        const response = await axios.patch(`/posts/${themeId}`, fd, config);\n        setModalImage(null);\n        setErr(false);\n        setMessage(\"Success uploading data\");\n        handleClick();\n      } catch (err) {\n        setErr(true);\n        setMessage(\"Server Error\");\n        handleClick();\n      }\n    }\n  };\n\n  return (\n    <Modal className=\"modal\" open={openM} onClose={closeModal}>\n      <div className=\"modal-div\">\n        <form className={classes.form} autoComplete=\"off\">\n          <TextField\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            id=\"filled-basic\"\n            label=\"Title\"\n          ></TextField>\n          <TextField\n            value={platform}\n            onChange={(e) => setPlatform(e.target.value)}\n            id=\"filled-basic\"\n            label=\"Platform\"\n          ></TextField>\n          <TextField\n            value={creater}\n            onChange={(e) => setCreater(e.target.value)}\n            id=\"filled-basic\"\n            label=\"Creater\"\n          ></TextField>\n          <label htmlFor=\"btnn-upload\">\n            <input\n              id=\"btnn-upload\"\n              name=\"btnn-upload\"\n              style={{ display: \"none\" }}\n              type=\"file\"\n              onChange={(e) => changeImageHandler(e)}\n            />\n            <Button\n              className={classes.upldbtn}\n              variant=\"outlined\"\n              color=\"secondary\"\n              component=\"span\"\n            >\n              Upload Image File\n            </Button>\n          </label>\n          {modalImage ? (\n            <img\n              className={classes.preview}\n              src={URL.createObjectURL(modalImage)}\n              alt=\"preview\"\n            ></img>\n          ) : element.file ? (\n            <img\n              className={classes.preview}\n              src={`/uploads/${element.file}`}\n              alt=\"preview\"\n            ></img>\n          ) : null}\n          <Button\n            onClick={onSubmitHandler}\n            className={classes.btn}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </form>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={err ? \"error\" : \"success\"}>\n            {message}\n          </Alert>\n        </Snackbar>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Themes;\n","import { Button, Container, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n\nconst useStyles = makeStyles({\n  images: {\n    height: \"90vh\",\n    // backgroundColor: \"white\",\n  },\n  cent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"black\",\n    // overflow:\"hidden\"\n  },\n  text: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#000105\",\n    backgroundImage:\n      'url(\"https://www.transparenttextures.com/patterns/dark-geometric.png\")',\n  },\n});\n\nconst Theme = () => {\n  const classes = useStyles();\n  const [theme, setTheme] = useState({});\n  const params = useParams();\n  useEffect(() => {\n    const fetchSingle = async () => {\n      const { data } = await axios.get(`/posts/${params.id}`);\n      setTheme({ ...data });\n      console.log(theme);\n    };\n    fetchSingle();\n  }, [params.id]);\n  return (\n    <div style={{ paddingTop: \"60px\", flexGrow: \"1\" }}>\n      <Grid container spacing={3}>\n        <Grid item className={classes.cent} xs=\"12\" sm={6}>\n          <img\n            className={`${classes.images} rot`}\n            src={\"/uploads/\" + theme.file}\n            alt=\"themesImage\"\n          ></img>\n        </Grid>\n        <Grid item sm={6} xs=\"12\" className={classes.text}>\n          <Typography variant=\"h2\">{theme.title}</Typography>\n          <Typography color='secondary' variant=\"h5\">By: {theme.creator}</Typography>\n          <Typography\n            variant=\"p\"\n            color='error'\n            style={{ maxWidth: \"400px\", textAlign: \"center\", marginTop: \"15px\" }}\n          >\n            Created with KWGT , Wallpaper from Zedge, Icon from Zetta Icons Pro\n          </Typography>\n          <Button color='primary' variant='outlined' style={{marginTop:\"1rem\"}} >Download Resources</Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Theme;\n","import {\n  AppBar,\n  Typography,\n  Grid,\n  makeStyles,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Fragment, useState } from \"react\";\n\nimport \"./App.css\";\nimport Form from \"./components/form/Form\";\nimport Themes from \"./components/themes/Themes\";\nimport Theme from \"./components/themes/theme/Theme\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingBottom:\"20px\"\n  },\n}));\n\nfunction App() {\n  return (\n    <Router>\n      <Fragment>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Main}></Route>\n          <Route exact path=\"/posts/:id\" component={Theme}></Route>\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n}\n\nconst Main = () => {\n  const classes = useStyles();\n  const [change, SetChange] = useState(true);\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Themes re={change} />\n        <Form funk={SetChange} re={change} />\n      </Grid>\n    </div>\n  );\n};\n\nconst Navbar = () => {\n  return (\n    <AppBar elevation={0} position=\"fixed\">\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h6\" color=\"inherit\">\n          Themes.IO\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}